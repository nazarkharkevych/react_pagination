{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","_ref$currentPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","handleOnClick","page","prevLinkDisabled","nextLinkDisabled","_jsxs","className","children","_jsx","classNames","disabled","href","onClick","map","active","concat","bind","items","App","_useState","useState","_useState2","_slicedToArray","itemsPerPage","setItemsPerPage","_useState3","_useState4","setCurrentPage","_useState5","slice","_useState6","visibleItems","setVisibleItems","navigate","useNavigate","_useSearchParams","useSearchParams","searchParams","totalItemsCount","length","itemsFrom","itemsTo","useEffect","pathname","search","queryParamPage","get","queryParamPerPage","endIndex","startIndex","id","value","onChange","event","target","htmlFor","item","router","createBrowserRouter","path","element","errorElement","ReactDOM","render","RouterProvider","document","getElementById"],"mappings":"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","file":"static/js/main.e4b287dd.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  // eslint-disable-next-line react/require-default-props\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, numberOfPages);\n\n  const handleOnClick = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const prevLinkDisabled = currentPage === 1;\n  const nextLinkDisabled = currentPage === numberOfPages;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: prevLinkDisabled },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={prevLinkDisabled}\n          onClick={() => {\n            if (prevLinkDisabled) {\n              return;\n            }\n\n            onPageChange(currentPage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={handleOnClick.bind(null, page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        { disabled: nextLinkDisabled },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={nextLinkDisabled}\n          onClick={() => {\n            if (nextLinkDisabled) {\n              return;\n            }\n\n            onPageChange(currentPage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  useNavigate,\n  useSearchParams,\n} from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [visibleItems, setVisibleItems]\n    = useState(() => items.slice(0, itemsPerPage));\n\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams({ page: '2', perPage: '7' });\n\n  const totalItemsCount = items.length;\n\n  const itemsFrom = itemsPerPage * currentPage - (itemsPerPage - 1);\n\n  const itemsTo = itemsPerPage * currentPage > totalItemsCount\n    ? totalItemsCount\n    : itemsPerPage * currentPage;\n\n  useEffect(() => {\n    navigate({\n      pathname: '/',\n      search: `?${searchParams}`,\n    });\n    const queryParamPage = searchParams.get('page') || 2;\n    const queryParamPerPage = searchParams.get('perPage') || 7;\n\n    setItemsPerPage(+queryParamPerPage);\n    setCurrentPage(+queryParamPage);\n  }, []);\n\n  const handleItemsPerPageChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const perPage = +event.target.value;\n\n    setVisibleItems(items.slice(0, perPage));\n    setCurrentPage(1);\n  };\n\n  useEffect(() => {\n    const endIndex = itemsPerPage * currentPage;\n    const startIndex = endIndex - (itemsPerPage - 1);\n\n    setVisibleItems(items.slice(startIndex - 1, endIndex));\n  }, [currentPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `}\n        {`(items ${itemsFrom} - ${itemsTo} of ${totalItemsCount})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"7\">7</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItemsCount}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { App } from './App';\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <h1>404... Page not found</h1>,\n  },\n]);\n\nReactDOM.render((\n  <RouterProvider router={router} />\n), document.getElementById('root'));\n"],"sourceRoot":""}